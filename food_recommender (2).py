# -*- coding: utf-8 -*-
"""food_recommender

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PLpuB_5Q6PdxRCs2f6G9ZRRk3razfYWB
"""

code = """
import streamlit as st
import pandas as pd

st.title("질병별 음식 추천 프로그램")

@st.cache_data
def load_data():
    limit_df = pd.read_csv("disease_nutrient_limits.csv")
    food_df = pd.read_csv("20250408_음식DB.csv")
    return limit_df, food_df

limit_df, food_df = load_data()

selected_disease = st.selectbox("추천받을 질병명을 선택하세요:", limit_df["질병명"].unique())

if selected_disease:
    limit_row = limit_df.loc[limit_df["질병명"] == selected_disease].iloc[0]

    sugar_limit = limit_row.get("당류(g 이하)", None)
    sodium_limit = limit_row.get("나트륨(mg 이하)", None)
    fat_limit = limit_row.get("지방(g 이하)", None)

    filtered_df = food_df.copy()

    if sugar_limit is not None and not pd.isna(sugar_limit):
        filtered_df = filtered_df[filtered_df["당류(g)"] <= sugar_limit]
    if sodium_limit is not None and not pd.isna(sodium_limit):
        filtered_df = filtered_df[filtered_df["나트륨(mg)"] <= sodium_limit]
    if fat_limit is not None and not pd.isna(fat_limit):
        filtered_df = filtered_df[filtered_df["지방(g)"] <= fat_limit]

    st.subheader(f"'{selected_disease}'에 대한 추천 음식:")
    if not filtered_df.empty:
        for _, row in filtered_df.iterrows():
            st.write(f"- {row['식품명']}: 당류 {row['당류(g)']}g, 나트륨 {row['나트륨(mg)']}mg, 지방 {row['지방(g)']}g")
    else:
        st.write("추천 음식이 없습니다.")
"""

with open("food_recommender.py", "w", encoding="utf-8") as f:
    f.write(code)

print("✅ food_recommender.py 파일이 생성되었습니다!")